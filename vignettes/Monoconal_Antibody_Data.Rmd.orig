---
title: "Accessing Monoclonal Antibody Data"
author:
- Ju Yeong Kim
- Jason Taylor
date: "`r Sys.Date()`"
output: rmarkdown::html_vignette
vignette: >
  %\VignetteIndexEntry{Accessing Monoclonal Antibody Data}
  %\VignetteEngine{knitr::rmarkdown}
  %\VignetteEncoding{UTF-8}
---

<style>
table {
    max-width: 100%;
    max-height: 600px;
    overflow: scroll;
}
thead{
    position: sticky;
    top: 0px;
    background-color: #fff;
}
</style>

```{r, echo = FALSE, warning=FALSE, message=FALSE}
STAGING <- identical(tolower(Sys.getenv("STAGING")), "true")
labkey.url.base <- ifelse(STAGING, "https://dataspace-staging.cavd.org", "https://dataspace.cavd.org")
knitr::opts_chunk$set(
  collapse = TRUE,
  comment = "#>"
)
```


## Workflow overview

Using the DataSpace [app](https://dataspace.cavd.org/cds/CAVD/app.view#mabgrid), the workflow of using the mAb grid is the following:

1. Navigate to the mAb Grid and browse the available mAb mixtures
2. Select the mAb mixtures that you'd like to investigate
3. Or filter rows by using columns:
    - mAb/Mixture
    - donor species
    - isotype
    - HXB2 location
    - tiers
    - clades
    - viruses
4. Click "Neutralization Curves" or "IC50 Titer Heatmap" to visualize the mAb data
5. Click "Export CSV" or "Export Excel" to download the mAb data

`DataSpaceR` offers a similar interface:

1. Browse the mAb Grid by `con$mabGridSummary`
2. Select the mAb mixtures by filtering the mAb grid using any columns found in `con$mabGrid` using `con$filterMabGrid()`
3. Use `con$getMab()` to retrieve the mAb data


## Browse the mAb Grid

You can browse the mAb Grid by calling the `mabGridSummary` field in the connection object:

```{r}
library(DataSpaceR)
con <- connectDS()

knitr::kable(head(con$mabGridSummary))
```

This table is designed to mimic the mAb grid found in the app.

One can also access the unsummarized data from the mAb grid by calling `con$mabGrid`.

## Filter the mAb grid

You can filter rows in the grid by specifying the values to keep in the columns found in the field `con$mabGrid`: `mab_mixture`, `donor_species`, `isotype`, `hxb2_location`, `tiers`, `clades`, `viruses`, and `studies`. `filterMabGrid` takes the column and the values and filters the underlying tables (private fields), and when you call the `mabGridSummary` or (which is actually an [active binding](https://r6.r-lib.org/articles/Introduction.html#active-bindings)), it returns the filtered grid with updated `n_` columns and `geometric_mean_curve_ic50`.

```{r}
# filter the grid by viruses
con$filterMabGrid(using = "virus", value = c("242-14", "Q23.17", "6535.3", "BaL.26", "DJ263.8"))

# filter the grid by donor species (llama)
con$filterMabGrid(using = "donor_species", value = "llama")

# check the updated grid
knitr::kable(con$mabGridSummary)
```

Or we can use method chaining to call multiple filter methods and browse the grid. Method chaining is unique to R6 objects and related to the pipe. See Hadley Wickham's [Advanced R](https://adv-r.hadley.nz/r6.html) for more info

```{r eval=FALSE}
con$
  filterMabGrid(using = "hxb2_location", value = c("Env", "gp160"))$
  filterMabGrid(using = "donor_species", value = "llama")$
  mabGridSummary
```


## Retrieve column values from the mAb grid

You can retrieve values from the grid by `mab_mixture`, `donor_species`, `isotype`, `hxb2_location`, `tier`, `clade`, `virus`, and `studies`, or any variables found in the `mabGrid` field in the connection object via `data.table` operations.

```{r}
# retrieve available viruses in the filtered grid
con$mabGrid[, unique(virus)]

# retrieve available clades for 1H9 mAb mixture in the filtered grid
con$mabGrid[mab_mixture == "1H9", unique(clade)]
```


## Create a DataSpaceMab object

After filtering the grid, you can create a DataSpaceMab object that contains the filtered mAb data.

```{r}
mab <- con$getMab()
mab
```

There are 6 public fields available in the `DataSpaceMab` object: `studyAndMabs`, `mabs`, `nabMab`, `studies`, `assays`, and `variableDefinitions`, and they are equivalent to the sheets in the excel file or the csv files you would download from the app via "Export Excel"/"Export CSV".

```{r}
knitr::kable(con$mabGridSummary)
```

## View metadata concerning the mAb object

There are several metadata fields that can be exported in the mAb object.

```{r}
names(mab)
```

## Session information

```{r session-info}
sessionInfo()
```
